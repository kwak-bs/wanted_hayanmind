{"version":3,"sources":["style/GlobalStyle.js","Comment.js","api/getComment.js","constants/index.js","FetchMore.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","reset","Comment","id","email","name","CommentContainer","CommentBox","Title","Context","styled","div","getComments","page","a","fetch","method","then","res","json","response","FetchMore","setPage","target","useRef","observer","IntersectionObserver","entries","isIntersecting","prev","console","log","threshold","useEffect","observe","current","unobserve","className","ref","App","useState","data","setIsdata","loading","setIsLoading","getItems","fetchData","concat","Container","Wrap","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAoCeA,EAlCKC,YAAH,2hBACbC,K,qCCAW,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KAC3C,OACE,eAACC,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,yBACA,cAACC,EAAD,UAAUN,OAEZ,eAACI,EAAD,WACE,cAACC,EAAD,oBACA,cAACC,EAAD,UAAUL,OAEZ,gCACE,cAACI,EAAD,sBACA,cAACC,EAAD,UAAUJ,UAMlB,I,IAAMC,EAAmBI,IAAOC,IAAV,kKAShBJ,EAAaG,IAAOC,IAAV,sGAMVH,EAAQE,IAAOC,IAAV,sHAOLF,EAAUC,IAAOC,IAAV,gDC1CAC,EAAW,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACFC,MAAM,GAAD,OCHZ,gDDGY,kBAA0BF,EAA1B,mBCFlB,IDEkE,CAC1EG,OAAQ,QACPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAHI,cACnBC,EADmB,yBAIlBA,GAJkB,2CAAH,sDE0BTC,EA1BG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACbC,EAASC,iBAAO,MAWhBC,EAAW,IAAIC,sBATJ,SAACC,GACDA,EAAQ,GAEZC,iBACTN,GAAQ,SAACO,GAAD,OAAUA,EAAO,KACzBC,QAAQC,IAAI,kDAIoC,CAAEC,UAAW,KAWjE,OATAC,qBAAU,WAER,OADAR,EAASS,QAAQX,EAAOY,SACjB,WACDZ,EAAOY,SACTV,EAASW,UAAUb,EAAOY,YAG7B,IAEI,qBAAKE,UAAW,UAAWC,IAAKf,KCnB1B,SAASgB,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBJ,mBAAS,GAAjC,mBAAO3B,EAAP,KAAaS,EAAb,KAEMuB,EAAQ,uCAAG,4BAAA/B,EAAA,6DACf8B,GAAa,GADE,SAEShC,EAAYC,GAFrB,OAETiC,EAFS,OAGfJ,GAAU,SAACb,GAAD,OAAUA,EAAKkB,OAAOD,MAChCF,GAAa,GAJE,2CAAH,qDAWd,OAJAX,qBAAU,WACRY,MACC,CAAChC,IAGF,eAACmC,EAAD,WACE,cAACC,EAAD,UACGR,EAAKS,KAAI,YAA0B,IAAvB/C,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACtB,OAAO,cAACH,EAAD,CAASC,GAAIA,EAAIC,MAAOA,EAAOC,KAAMA,GAAWF,QAG1DwC,EAAU,aAAe,cAAC,EAAD,CAAWrB,QAASA,OAKpD,IAAM0B,EAAYtC,IAAOC,IAAV,iIAOTsC,EAAOvC,IAAOC,IAAV,kECpCVwC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAACd,EAAD,OAEFe,SAASC,eAAe,W","file":"static/js/main.304fa4ce.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${reset};\r\n* {\r\n  box-sizing: border-box;\r\n  font-family: 'Noto Sans KR', sans-serif;\r\n  user-select: none;\r\n  -webkit-tap-highlight-color:rgba(255,255,255,0);\r\n  -webkit-touch-callout: none;\r\n}\r\nbutton {\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n}\r\nimg {\r\n  object-fit: cover;\r\n}\r\ninput[type='checkbox'] {\r\n  cursor: pointer;\r\n}\r\nbutton {\r\n  cursor: pointer;\r\n}\r\nul,li {\r\n  list-style: none;\r\n}\r\na {\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\nhtml {\r\n  overflow-x: hidden;\r\n}\r\n`;\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default function Comment({ id, email, name }) {\r\n  return (\r\n    <CommentContainer>\r\n      <CommentBox>\r\n        <Title>Comment ld</Title>\r\n        <Context>{id}</Context>\r\n      </CommentBox>\r\n      <CommentBox>\r\n        <Title>Email</Title>\r\n        <Context>{email}</Context>\r\n      </CommentBox>\r\n      <div>\r\n        <Title>Comment</Title>\r\n        <Context>{name}</Context>\r\n      </div>\r\n    </CommentContainer>\r\n  );\r\n}\r\n\r\nconst CommentContainer = styled.div`\r\n  width: 100%;\r\n  padding: 20px;\r\n  margin: 10px 0;\r\n  border-radius: 20px;\r\n  background-color: #f8f9fa;\r\n  border: 1px solid gray;\r\n`;\r\n\r\nconst CommentBox = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  margin: 10px 10px 10px 0;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: #212529;\r\n`;\r\n\r\nconst Context = styled.div`\r\n  font-size: 18px;\r\n`;\r\n","import { API_ENDPOINT, MAX } from '../constants/index';\r\n\r\nexport const getComments = async (page) => {\r\n  const response = await fetch(`${API_ENDPOINT}?_page=${page}&_limit=${MAX}`, {\r\n    method: 'GET',\r\n  }).then((res) => res.json());\r\n  return response;\r\n};\r\n","const API_ENDPOINT = `https://jsonplaceholder.typicode.com/comments`;\r\nconst MAX = 10;\r\n\r\nexport { API_ENDPOINT, MAX };\r\n","import React, { useRef, useEffect } from 'react';\r\n\r\nconst FetchMore = ({ setPage }) => {\r\n  const target = useRef(null);\r\n\r\n  const callback = (entries) => {\r\n    const target = entries[0];\r\n\r\n    if (target.isIntersecting) {\r\n      setPage((prev) => prev + 1);\r\n      console.log('화면에서 노출됨');\r\n    } \r\n  };\r\n\r\n  const observer = new IntersectionObserver(callback, { threshold: 0.5 });\r\n\r\n  useEffect(() => {\r\n    observer.observe(target.current);\r\n    return () => {\r\n      if (target.current) {\r\n        observer.unobserve(target.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return <div className={'loading'} ref={target} />;\r\n};\r\n\r\nexport default FetchMore;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Comment from './Comment';\r\nimport styled from 'styled-components';\r\nimport { getComments } from './api/getComment';\r\nimport FetchMore from './FetchMore';\r\n\r\nexport default function App() {\r\n  const [data, setIsdata] = useState([]);\r\n  const [loading, setIsLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const getItems = async () => {\r\n    setIsLoading(true);\r\n    const fetchData = await getComments(page);\r\n    setIsdata((prev) => prev.concat(fetchData));\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [page]);\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        {data.map(({ id, email, name }) => {\r\n          return <Comment id={id} email={email} name={name} key={id} />;\r\n        })}\r\n      </Wrap>\r\n      {loading ? 'Loading...' : <FetchMore setPage={setPage} />}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  width: 500px;\r\n  margin-top: 26px;\r\n`;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GlobalStyle from './style/GlobalStyle';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}